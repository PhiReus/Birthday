"use client"

import { useEffect, useRef, useState } from "react"
import { Volume2, VolumeX } from "lucide-react"
import { motion, AnimatePresence } from "framer-motion"
import { ChevronLeft, ChevronRight } from "lucide-react"
import { Button } from "@/components/ui/button"

const memories = [
  {
    id: 1,
    caption: "√Ånh m·∫Øt ƒë·∫ßu ti√™n",
    description: "Anh v·∫´n c√≤n nh·ªõ r·ªè c·∫£m x√∫c l·∫ßn ƒë·∫ßu g·∫∑p em, anh kh√¥ng d√°m n√≥i l√† y√™u t·ª´ c√°i nh√¨n ƒë·∫ßu ti√™n nh∆∞ng ch·∫Øc ch·∫Øn l√† √°nh m·∫Øt ƒë√≥ ƒë√£ kh·∫Øc s√¢u v√† t√¢m tr√≠ anh",
  },
  {
    id: 2,
    caption: "N·ª• c∆∞·ªùi t·ªèa n·∫Øng",
    description: "M·ªói khi em c∆∞·ªùi, c·∫£ th·∫ø gi·ªõi b·ª´ng s√°ng. N·ª• c∆∞·ªùi ·∫•y l√† ngu·ªìn nƒÉng l∆∞·ª£ng v√¥ t·∫≠n, gi√∫p anh v∆∞·ª£t qua m·ªçi kh√≥ khƒÉn.",
  },
  {
    id: 3,
    caption: "B√†n tay d·ªãu d√†ng",
    description: "B√†n tay em lu√¥n ·ªü ƒë√≥, lu√¥n n·∫Øm ch·∫∑t tay anh qua m·ªçi kh√≥ khƒÉn. T·ª´ khi c√≥ em b√™n c·∫°nh, anh th·∫•y cu·ªôc s·ªëng anh t·ªët l√™n r·∫•t nhi·ªÅu",
  },
  {
    id: 4,
    caption: "C·∫≥m ∆°n m·∫π em",
    description: "M·∫π anh sinh anh ra ƒë·ªÉ ng·∫Øm nh√¨n th·∫ø gi·ªõi, c√≤n m·∫π em l·∫°i mang c·∫£ th·∫ø gi·ªõi ƒë·∫øn b√™n anh.",
  },
  {
    id: 5,
    caption: "Ti·ªÉu th∆∞ n√®",
    description: "M·ªói kho·∫£nh kh·∫Øc b√™n em anh ƒë·ªÅu r·∫•t tr√¢n tr·ªçng, v√† anh s·∫Ω c·ªë g·∫Øng ƒë·ªÉ t·∫°o ra th·∫≠t nhi·ªÅu k·ª∑ ni·ªám ƒë·∫πp b√™n em, ƒë·ªÉ em lu√¥n c∆∞·ªùi t∆∞∆°i m·ªïi ng√†y.",
  },
  {
    id: 6,
    caption: "13/10/2025",
    description: "Ch√∫c m·ª´ng sinh nh·∫≠t Embe c·ªßa anh, ch√∫c cho em tu·ªïi m·ªõi lu√¥n vui t∆∞∆°i nh∆∞ 'T·ªõ kh√¥ng bi·∫øt bu·ªìn', ch√∫c cho ƒë√¥i ta ng√†y c√†ng y√™u h∆°n, v√† ch√∫c cho t√¨nh y√™u c·ªßa ch√∫ng m√¨nh s·∫Ω m√£i b·ªÅn l√¢u. Anh y√™u Embe nhi·ªÅu ‚ù§Ô∏è",
  },
  {
    id: 7,
    caption: "2/9",
    description: "Vi vu qu·ªëc kh√°nh n√®",
  },
  {
    id: 8,
    caption: "ü§î",
    description: "ƒëang l√†m g√¨ v·∫≠y ?",
  },
  {
    id: 9,
    caption: "Cua ch·ªëng",
    description: "D∆∞·ª°ng th√™",
  },
  {
    id: 10,
    caption: "Ngoan xink iu",
    description: "Metro",
  },
  {
    id: 11,
    caption: "Chill Girl",
    description: "Coffe b·ªát",
  },
]
/*
 { emoji: "‚ú®", text: "M√£i b√™n nhau nh√©" },
          ].map((item, index) => (
*/

export default function MemoriesPage() {
  const [currentIndex, setCurrentIndex] = useState(0)

  const nextSlide = () => {
    setCurrentIndex((prev) => (prev + 1) % memories.length)
  }

  const prevSlide = () => {
    setCurrentIndex((prev) => (prev - 1 + memories.length) % memories.length)
  }

  return (
    <div className="min-h-screen flex items-center justify-center px-4 pt-24 pb-24">
      <div className="max-w-4xl mx-auto w-full">
        <motion.h2
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-3xl md:text-5xl font-serif text-primary text-center mb-12"
          style={{ fontFamily: "var(--font-playfair)" }}
        >
          C·∫£m ∆°n em v√¨ ƒë√£ ƒë·∫øn b√™n anh <span>‚ù§Ô∏è</span>
        </motion.h2>

        <div className="relative">
          <AnimatePresence mode="wait">
            <motion.div
              key={currentIndex}
              initial={{ opacity: 0, x: 100 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -100 }}
              transition={{ duration: 0.5 }}
              className="bg-card rounded-3xl shadow-2xl overflow-hidden border border-border"
            >
              {/* Image placeholder */}
              <div className="aspect-[4/3] bg-gradient-to-br from-primary/20 via-accent/20 to-secondary flex items-center justify-center">
               <img
                 src={`/em${currentIndex + 1}.jpg`}
                 alt={memories[currentIndex].caption}
                 className="w-full h-full object-cover"
                />
              </div>
              {/* Caption */}
              <div className="p-8 md:p-12">
                <h3 className="text-2xl md:text-3xl font-serif text-primary mb-4 text-balance">
                  {memories[currentIndex].caption}
                </h3>
                <p className="text-base md:text-lg text-foreground/80 leading-relaxed text-pretty">
                  {memories[currentIndex].description}
                </p>
              </div>
            </motion.div>
          </AnimatePresence>

          {/* Navigation buttons */}
          <div className="absolute top-1/2 -translate-y-1/2 left-0 right-0 flex justify-between px-4 pointer-events-none">
            <Button
              onClick={prevSlide}
              size="icon"
              variant="secondary"
              className="pointer-events-auto rounded-full shadow-lg w-12 h-12"
            >
              <ChevronLeft className="w-6 h-6" />
            </Button>
            <Button
              onClick={nextSlide}
              size="icon"
              variant="secondary"
              className="pointer-events-auto rounded-full shadow-lg w-12 h-12"
            >
              <ChevronRight className="w-6 h-6" />
            </Button>
          </div>

          {/* Dots indicator */}
          <div className="flex justify-center gap-2 mt-8">
            {memories.map((_, index) => (
              <button
                key={index}
                onClick={() => setCurrentIndex(index)}
                className={`w-2 h-2 rounded-full transition-all ${
                  index === currentIndex ? "bg-primary w-8" : "bg-primary/30 hover:bg-primary/50"
                }`}
              />
            ))}
          </div>
        </div>
      </div>
    </div>

  )
}
